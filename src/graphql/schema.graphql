# Exposes a URL that specifies the behaviour of this scalar.
directive @specifiedBy(
  # The URL that specifies the behaviour of this scalar.
  url: String!
) on SCALAR
type Equipment {
  id: Int!
  createdAt: String!
  updatedAt: String!
  category: String!
  manufacturer: String!
  model: String!
  publicNotes: String
  cost: Float
  powerDraw: Float
  weight: Float
  depth: Float
  rackUnit: Int
  frequencyRange: String
}

input EquipmentInput {
  category: String!
  model: String!
  manufacturer: String!
  cost: Float
  powerDraw: Float
  weight: Float
  depth: Float
  rackUnit: Float
  frequencyRange: String
  publicNotes: String
  searchModel: String
}

type EquipmentResponse {
  errors: [FieldError!]
  equipment: Equipment
  equipmentItems: [Equipment!]
}

type FieldError {
  field: String!
  message: String!
}

type Mutation {
  createPost(title: String!): Post!
  deletePost(id: Int!): Boolean!
  deletePosts(ids: [Int!]!): Boolean!
  createEquipment(inputOptions: EquipmentInput!): EquipmentResponse
  updateEquipment(updateOptions: EquipmentInput!, id: Int!): EquipmentResponse
  deleteEquipment(model: String!, id: Int): Boolean!
  deleteEquipmentRange(ids: [Int!]!): String!
  registerUser(inputOptions: UserInput!): UserResponse!
  loginUser(inputOptions: UserInput!): UserResponse!
  logout: Boolean!
}

type Post {
  id: Int!
  createdAt: String!
  updatedAt: String!
  title: String!
}

type Query {
  posts: [Post!]!
  post(id: Int!): Post
  search(searchTitle: String!): [Post!]!
  getEquipment(model: String!): Equipment
  getAllEquipment: [Equipment!]
  fullTextSearch(fullSearch: String!): [Equipment!]!
  fuzzyTextSearch(fuzzySearch: String!): [Equipment!]!
  users: [User!]!
  bye: String!
  me: User!
}

type User {
  id: Int!
  createdAt: String!
  updatedAt: String!
  email: String!
}

input UserInput {
  email: String!
  password: String!
}

type UserResponse {
  errors: [FieldError!]
  user: User
  accessToken: String!
}
